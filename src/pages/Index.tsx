'use client'

import { useState, useEffect } from 'react'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Progress } from '@/components/ui/progress'
import Icon from '@/components/ui/icon'

export default function AICorpSite() {
  const [chatOpen, setChatOpen] = useState(false)
  const [messages, setMessages] = useState([])
  const [userInput, setUserInput] = useState('')
  const [userBehavior, setUserBehavior] = useState({
    pageViews: 0,
    timeOnPage: 0,
    interactionScore: 0,
    scrollProgress: 0
  })
  const [showWelcomeDialog, setShowWelcomeDialog] = useState(false)
  const [aiWelcome, setAiWelcome] = useState(false)
  const [animatedText, setAnimatedText] = useState('')
  
  const mainTitle = "–†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–µ –ò–ò-—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–π"
  const aiGreeting = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –≤–∞—à –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ ü§ñ"
  
  useEffect(() => {
    // –ê–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    setTimeout(() => {
      setShowWelcomeDialog(true)
      setMessages([{ type: 'bot', text: '–ü—Ä–∏–≤–µ—Ç! üëã –ú–µ–Ω—è –∑–æ–≤—É—Ç ARIA - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±—É–¥—É—â–µ–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π!', timestamp: Date.now() }])
    }, 1500)
    
    // –ü–µ—á–∞—Ç–∞—é—â–∏–π—Å—è —Ç–µ–∫—Å—Ç
    let currentIndex = 0
    const timer = setInterval(() => {
      if (currentIndex < mainTitle.length) {
        setAnimatedText(mainTitle.slice(0, currentIndex + 1))
        currentIndex++
      } else {
        clearInterval(timer)
      }
    }, 100)
    
    // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è
    const startTime = Date.now()
    setUserBehavior(prev => ({ ...prev, pageViews: prev.pageViews + 1 }))
    
    const trackTime = setInterval(() => {
      setUserBehavior(prev => ({
        ...prev,
        timeOnPage: Math.floor((Date.now() - startTime) / 1000)
      }))
    }, 1000)
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–∞
    const handleScroll = () => {
      const scrollHeight = document.documentElement.scrollHeight - window.innerHeight
      const scrolled = window.scrollY
      const progress = (scrolled / scrollHeight) * 100
      setUserBehavior(prev => ({ ...prev, scrollProgress: progress }))
    }
    
    window.addEventListener('scroll', handleScroll)
    
    return () => {
      clearInterval(timer)
      clearInterval(trackTime)
      window.removeEventListener('scroll', handleScroll)
    }
  }, [])
  
  const handleChatSend = () => {
    if (!userInput.trim()) return
    
    const newUserMessage = { type: 'user', text: userInput, timestamp: Date.now() }
    setMessages(prev => [...prev, newUserMessage])
    setUserBehavior(prev => ({ ...prev, interactionScore: prev.interactionScore + 15 }))
    
    // –°–∏–º—É–ª—è—Ü–∏—è "–ø–µ—á–∞—Ç–∞–Ω–∏—è" –æ—Ç–≤–µ—Ç–∞ –ò–ò
    setTimeout(() => {
      const responses = [
        '–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! üöÄ –ù–∞—à–∞ –ò–ò-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –º–æ–∂–µ—Ç —É–≤–µ–ª–∏—á–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –Ω–∞ 300%. –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∫–∞–∫?',
        `–Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –≤–∞—à–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ - –≤—ã –ø—Ä–æ–≤–µ–ª–∏ ${Math.floor(userBehavior.timeOnPage)} —Å–µ–∫—É–Ω–¥ –Ω–∞ —Å–∞–π—Ç–µ. –†–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–∑–¥–µ–ª "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏" üìä`,
        '–ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –≤–∞—Å –º–æ–∂–µ—Ç –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞—Ç—å –Ω–∞—à–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –¥–µ–º–æ. –ü–æ–ø—Ä–æ–±—É–µ–º? üéØ',
        `–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: –≤—ã –ø—Ä–æ–∫—Ä—É—Ç–∏–ª–∏ ${Math.round(userBehavior.scrollProgress)}% —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –í–∏–∂—É, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç –Ω–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è! üìà`,
        '–Ø –∏—Å–ø–æ–ª—å–∑—É—é –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–∞—à–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π. –î–∞–≤–∞–π—Ç–µ –æ–±—Å—É–¥–∏–º, –∫–∞–∫ –ò–ò –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –∏–º–µ–Ω–Ω–æ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏! üß†'
      ]
      
      setMessages(prev => [...prev, { 
        type: 'bot', 
        text: responses[Math.floor(Math.random() * responses.length)],
        timestamp: Date.now()
      }])
    }, 1200)
    
    setUserInput('')
  }

  const handleAIGreeting = () => {
    setChatOpen(true)
    setAiWelcome(true)
    setShowWelcomeDialog(false)
    setMessages(prev => [...prev, { 
      type: 'bot', 
      text: '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ –Ω–∞—à–∏—Ö –ò–ò-—Ä–µ—à–µ–Ω–∏—è—Ö. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ? ü§î',
      timestamp: Date.now()
    }])
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-950 via-blue-950 to-slate-900 text-white relative overflow-hidden">
      {/* –§–æ–Ω–æ–≤—ã–µ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute -top-4 -left-4 w-72 h-72 bg-blue-500/10 rounded-full blur-3xl animate-pulse"></div>
        <div className="absolute top-1/2 -right-4 w-96 h-96 bg-purple-500/10 rounded-full blur-3xl animate-pulse delay-1000"></div>
        <div className="absolute bottom-0 left-1/3 w-80 h-80 bg-cyan-500/10 rounded-full blur-3xl animate-pulse delay-2000"></div>
      </div>
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥ –ò–ò */}
      {showWelcomeDialog && (
        <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center animate-fade-in">
          <Card className="max-w-md mx-4 bg-slate-900/90 border-blue-500/30 shadow-2xl">
            <CardHeader className="text-center pb-4">
              <div className="relative mx-auto mb-4">
                <div className="w-20 h-20 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center animate-bounce">
                  <Icon name="Bot" size={36} className="text-white" />
                </div>
                <div className="absolute inset-0 bg-blue-400/30 rounded-full blur-xl animate-pulse"></div>
              </div>
              <CardTitle className="text-xl text-blue-400">ARIA - –ò–ò –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç</CardTitle>
              <p className="text-slate-300 text-sm mt-2">
                –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å–∞–π—Ç—É
              </p>
            </CardHeader>
            <CardContent className="text-center space-y-4">
              <p className="text-slate-200">
                –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –≤–∞–º –∏–∑—É—á–∏—Ç—å –Ω–∞—à–∏ –ò–ò-—Ä–µ—à–µ–Ω–∏—è –∏ –æ—Ç–≤–µ—á—É –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã.
              </p>
              <div className="flex gap-3">
                <Button onClick={handleAIGreeting} className="flex-1 bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600">
                  <Icon name="MessageCircle" className="mr-2" size={16} />
                  –ù–∞—á–∞—Ç—å —á–∞—Ç
                </Button>
                <Button variant="outline" onClick={() => setShowWelcomeDialog(false)} className="border-slate-600 text-slate-300 hover:bg-slate-800">
                  –ü–æ–∑–∂–µ
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>
      )}

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <nav className="fixed top-0 w-full bg-slate-950/80 backdrop-blur-xl border-b border-blue-500/20 z-50">
        <div className="container mx-auto px-6 py-4 flex justify-between items-center">
          <div className="flex items-center space-x-3">
            <div className="relative">
              <Icon name="Brain" className="text-blue-400 animate-pulse" size={36} />
              <div className="absolute inset-0 bg-blue-400/20 rounded-full blur-xl animate-ping"></div>
            </div>
            <span className="text-2xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
              NEURAL CORP
            </span>
          </div>
          <div className="hidden md:flex space-x-8">
            {['–ì–ª–∞–≤–Ω–∞—è', '–ò–ò-–†–µ—à–µ–Ω–∏—è', '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–ö–æ–º–∞–Ω–¥–∞', '–î–µ–º–æ', '–ö–æ–Ω—Ç–∞–∫—Ç—ã'].map((item) => (
              <a key={item} href={`#${item.toLowerCase().replace('–∏–∏-', '').replace('-', '')}`} 
                 className="hover:text-blue-400 transition-all duration-300 hover:scale-105 relative group">
                {item}
                <span className="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-blue-400 to-purple-400 group-hover:w-full transition-all duration-300"></span>
              </a>
            ))}
          </div>
        </div>
      </nav>

      {/* –ì–ª–∞–≤–Ω–∞—è —Å–µ–∫—Ü–∏—è */}
      {/* –ì–ª–∞–≤–Ω–∞—è —Å–µ–∫—Ü–∏—è */}
      <section className="pt-24 min-h-screen flex items-center justify-center relative">
        <div className="container mx-auto px-6 text-center relative z-10">
          <div className="animate-fade-in-up">
            <div className="relative mb-8">
              <Icon name="Cpu" className="mx-auto text-blue-400" size={100} />
              <div className="absolute inset-0 bg-blue-400/20 blur-3xl animate-pulse"></div>
            </div>
            
            <h1 className="text-4xl md:text-7xl font-bold mb-8 leading-tight">
              <span className="bg-gradient-to-r from-blue-400 via-purple-400 to-cyan-400 bg-clip-text text-transparent">
                {animatedText}
              </span>
              <span className="animate-pulse text-blue-400">|</span>
            </h1>
            
            <p className="text-xl md:text-2xl mb-12 text-slate-300 max-w-4xl mx-auto leading-relaxed">
              –í—Å—Ç—Ä–µ—á–∞–π—Ç–µ –±—É–¥—É—â–µ–µ –±–∏–∑–Ω–µ—Å–∞ —Å –Ω–∞—à–∏–º–∏ –ò–ò-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏. 
              –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.
            </p>
            
            <div className="flex flex-col sm:flex-row gap-6 justify-center mb-16">
              <Button size="lg" className="bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 transform hover:scale-105 transition-all duration-300 shadow-lg hover:shadow-2xl">
                <Icon name="Rocket" className="mr-2" size={20} />
                –ó–∞–ø—É—Å—Ç–∏—Ç—å –ò–ò
              </Button>
              <Button variant="outline" size="lg" className="border-blue-500/50 text-blue-400 hover:bg-blue-500/10 transform hover:scale-105 transition-all duration-300">
                <Icon name="Play" className="mr-2" size={20} />
                –°–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ
              </Button>
            </div>

            {/* –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ */}
            <div className="grid md:grid-cols-3 gap-6 max-w-4xl mx-auto">
              {[
                { label: '–ò–ò –û–±—Ä–∞–±–æ—Ç–∫–∞', value: '2.3ms', icon: 'Zap', color: 'blue' },
                { label: '–¢–æ—á–Ω–æ—Å—Ç—å', value: '99.7%', icon: 'Target', color: 'green' },
                { label: '–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', value: '50K+', icon: 'Users', color: 'purple' }
              ].map((stat, i) => (
                <Card key={i} className="bg-slate-900/50 border-slate-700/50 backdrop-blur-sm transform hover:scale-105 transition-all duration-300">
                  <CardContent className="flex items-center justify-between p-6">
                    <div>
                      <p className="text-slate-400 text-sm">{stat.label}</p>
                      <p className="text-2xl font-bold text-white">{stat.value}</p>
                    </div>
                    <Icon name={stat.icon as any} className={`text-${stat.color}-400`} size={32} />
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </div>
        
        {/* –ü–∞–Ω–µ–ª—å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ */}
        <div className="absolute top-32 right-8 hidden lg:block">
          <Card className="w-72 bg-slate-900/70 backdrop-blur-sm border-blue-500/30 shadow-2xl">
            <CardHeader className="pb-3">
              <CardTitle className="text-sm flex items-center text-blue-400">
                <Icon name="Activity" className="mr-2 animate-pulse" size={16} />
                –ò–ò –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="flex justify-between items-center">
                <span className="text-slate-300 text-sm">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</span>
                <Badge className="bg-green-500/20 text-green-400 border-green-500/30">
                  {userBehavior.interactionScore} –±–∞–ª–ª–æ–≤
                </Badge>
              </div>
              
              <div className="space-y-2">
                <div className="flex justify-between text-sm">
                  <span className="text-slate-300">–í—Ä–µ–º—è –Ω–∞ —Å–∞–π—Ç–µ:</span>
                  <span className="text-blue-400">{userBehavior.timeOnPage}s</span>
                </div>
                <Progress value={(userBehavior.timeOnPage / 60) * 100} className="h-2 bg-slate-800" />
              </div>
              
              <div className="space-y-2">
                <div className="flex justify-between text-sm">
                  <span className="text-slate-300">–ü—Ä–æ–≥—Ä–µ—Å—Å –∏–∑—É—á–µ–Ω–∏—è:</span>
                  <span className="text-purple-400">{Math.round(userBehavior.scrollProgress)}%</span>
                </div>
                <Progress value={userBehavior.scrollProgress} className="h-2 bg-slate-800" />
              </div>
              
              <div className="pt-2 border-t border-slate-700">
                <div className="flex items-center space-x-2">
                  <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                  <span className="text-xs text-slate-400">–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ</span>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </section>

      {/* –°–µ–∫—Ü–∏—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π */}
      <section className="py-20 relative">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
              –ü–µ—Ä–µ–¥–æ–≤—ã–µ –ò–ò-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
            </h2>
            <p className="text-xl text-slate-300 max-w-3xl mx-auto">
              –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∞–º—ã–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∏ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏
            </p>
          </div>
          
          <div className="grid md:grid-cols-3 gap-8">
            {[
              { 
                icon: 'Brain', 
                title: '–ì–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ', 
                desc: '–ù–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ —Å 1000+ —Å–ª–æ—è–º–∏ –¥–ª—è —Å–ª–æ–∂–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö',
                metrics: ['99.7% —Ç–æ—á–Ω–æ—Å—Ç—å', '2.3ms –æ–±—Ä–∞–±–æ—Ç–∫–∞']
              },
              { 
                icon: 'Zap', 
                title: 'Real-time –ò–ò', 
                desc: '–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
                metrics: ['<1ms –∑–∞–¥–µ—Ä–∂–∫–∞', '50K –∑–∞–ø—Ä–æ—Å–æ–≤/—Å–µ–∫']
              },
              { 
                icon: 'Shield', 
                title: '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –ò–ò', 
                desc: '–ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã —Å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å—é –¥–∞–Ω–Ω—ã—Ö',
                metrics: ['256-bit —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ', 'GDPR compliance']
              }
            ].map((tech, i) => (
              <Card key={i} className="bg-slate-900/50 border-slate-700/50 backdrop-blur-sm hover:bg-slate-900/70 transform hover:scale-105 transition-all duration-500 group" style={{animationDelay: `${i * 0.2}s`}}>
                <CardHeader className="text-center pb-4">
                  <div className="relative mx-auto mb-4">
                    <Icon name={tech.icon as any} className="text-blue-400 group-hover:text-purple-400 transition-colors duration-300" size={56} />
                    <div className="absolute inset-0 bg-blue-400/20 rounded-full blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                  </div>
                  <CardTitle className="text-xl text-white group-hover:text-blue-400 transition-colors">
                    {tech.title}
                  </CardTitle>
                </CardHeader>
                <CardContent className="text-center space-y-4">
                  <p className="text-slate-300">{tech.desc}</p>
                  <div className="space-y-2">
                    {tech.metrics?.map((metric, j) => (
                      <Badge key={j} variant="outline" className="border-blue-500/30 text-blue-400 bg-blue-500/10">
                        {metric}
                      </Badge>
                    ))}
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* –†–µ—à–µ–Ω–∏—è */}
      <section id="solutions" className="py-20">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16 animate-fade-in">
            <h2 className="text-4xl font-bold mb-4">–ù–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è</h2>
            <p className="text-muted-foreground max-w-2xl mx-auto">
              –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –ò–ò-—Å–∏—Å—Ç–µ–º—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ—Ç—Ä–∞—Å–ª–µ–π
            </p>
          </div>
          
          <div className="grid md:grid-cols-2 gap-8">
            {[
              { title: '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞', metrics: ['95% —Ç–æ—á–Ω–æ—Å—Ç—å', '200% —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏'] },
              { title: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è', metrics: ['Real-time –¥–∞–Ω–Ω—ã–µ', '10+ –º–µ—Ç—Ä–∏–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è'] },
              { title: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤', metrics: ['70% —ç–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏', '99.9% –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å'] },
              { title: '–ü—Ä–æ–≥–Ω–æ–∑–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞', metrics: ['90% —Ç–æ—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–æ–≤', '–î–æ 12 –º–µ—Å—è—Ü–µ–≤ –≤–ø–µ—Ä–µ–¥'] }
            ].map((solution, i) => (
              <Card key={i} className="p-6 hover:scale-105 transition-transform animate-fade-in border-primary/20 bg-gradient-to-br from-card to-primary/5" style={{animationDelay: `${i * 0.1}s`}}>
                <h3 className="text-xl font-bold mb-4 flex items-center">
                  <Icon name="CheckCircle" className="mr-2 text-primary" size={20} />
                  {solution.title}
                </h3>
                <div className="space-y-2">
                  {solution.metrics.map((metric, j) => (
                    <Badge key={j} variant="secondary" className="mr-2">
                      {metric}
                    </Badge>
                  ))}
                </div>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* –ö–æ–º–∞–Ω–¥–∞ */}
      <section id="team" className="py-20 bg-muted/20">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16 animate-fade-in">
            <h2 className="text-4xl font-bold mb-4">–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞</h2>
            <p className="text-muted-foreground max-w-2xl mx-auto">
              –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –º–∏—Ä–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è –≤ –æ–±–ª–∞—Å—Ç–∏ –ò–ò –∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è
            </p>
          </div>
          
          <div className="grid md:grid-cols-3 gap-8">
            {[
              { name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤', role: 'Chief AI Officer', exp: '15+ –ª–µ—Ç –≤ –ò–ò' },
              { name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', role: 'Lead Data Scientist', exp: 'PhD –≤ ML' },
              { name: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤', role: 'Head of Engineering', exp: '12+ –ø—Ä–æ–µ–∫—Ç–æ–≤' }
            ].map((member, i) => (
              <Card key={i} className="text-center hover:scale-105 transition-transform animate-fade-in border-primary/20 bg-card/50 backdrop-blur-sm" style={{animationDelay: `${i * 0.2}s`}}>
                <CardHeader>
                  <div className="w-20 h-20 mx-auto bg-gradient-to-br from-primary to-blue-400 rounded-full flex items-center justify-center mb-4">
                    <Icon name="User" size={32} className="text-white" />
                  </div>
                  <CardTitle>{member.name}</CardTitle>
                  <p className="text-primary">{member.role}</p>
                </CardHeader>
                <CardContent>
                  <Badge variant="outline">{member.exp}</Badge>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* –î–µ–º–æ */}
      <section id="demo" className="py-20">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16 animate-fade-in">
            <h2 className="text-4xl font-bold mb-4">–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –¥–µ–º–æ</h2>
            <p className="text-muted-foreground max-w-2xl mx-auto">
              –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—à–∏ –ò–ò-—Ä–µ—à–µ–Ω–∏—è –≤ –¥–µ–π—Å—Ç–≤–∏–∏
            </p>
          </div>
          
          <div className="max-w-4xl mx-auto">
            <Card className="p-8 animate-scale-in border-primary/20 bg-gradient-to-br from-card to-primary/5">
              <div className="grid md:grid-cols-2 gap-8">
                <div>
                  <h3 className="text-2xl font-bold mb-4 flex items-center">
                    <Icon name="Cpu" className="mr-2 text-primary animate-pulse-glow" size={24} />
                    –ò–ò-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞
                  </h3>
                  <div className="space-y-4">
                    <div className="p-4 bg-muted rounded-lg">
                      <div className="flex justify-between mb-2">
                        <span>–°–∫–æ—Ä–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏</span>
                        <span className="text-primary">1.2ms</span>
                      </div>
                      <Progress value={85} className="h-2" />
                    </div>
                    <div className="p-4 bg-muted rounded-lg">
                      <div className="flex justify-between mb-2">
                        <span>–¢–æ—á–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏</span>
                        <span className="text-primary">94.7%</span>
                      </div>
                      <Progress value={95} className="h-2" />
                    </div>
                    <div className="p-4 bg-muted rounded-lg">
                      <div className="flex justify-between mb-2">
                        <span>–í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å</span>
                        <span className="text-primary">78.3%</span>
                      </div>
                      <Progress value={78} className="h-2" />
                    </div>
                  </div>
                </div>
                
                <div>
                  <h3 className="text-2xl font-bold mb-4 flex items-center">
                    <Icon name="Target" className="mr-2 text-primary" size={24} />
                    –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è
                  </h3>
                  <div className="space-y-3">
                    <Badge className="w-full justify-start p-3 bg-primary/10 text-primary border-primary/20">
                      <Icon name="User" className="mr-2" size={16} />
                      –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç
                    </Badge>
                    <Badge className="w-full justify-start p-3 bg-green-500/10 text-green-400 border-green-500/20">
                      <Icon name="TrendingUp" className="mr-2" size={16} />
                      –ò–Ω—Ç–µ—Ä–µ—Å—ã: –ò–ò, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
                    </Badge>
                    <Badge className="w-full justify-start p-3 bg-blue-500/10 text-blue-400 border-blue-500/20">
                      <Icon name="Clock" className="mr-2" size={16} />
                      –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –†–∞–∑–¥–µ–ª "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"
                    </Badge>
                  </div>
                </div>
              </div>
            </Card>
          </div>
        </div>
      </section>

      {/* –ö–æ–Ω—Ç–∞–∫—Ç—ã */}
      <section id="contacts" className="py-20 bg-muted/20">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16 animate-fade-in">
            <h2 className="text-4xl font-bold mb-4">–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</h2>
            <p className="text-muted-foreground max-w-2xl mx-auto">
              –ì–æ—Ç–æ–≤—ã –≤–Ω–µ–¥—Ä–∏—Ç—å –ò–ò –≤ –≤–∞—à –±–∏–∑–Ω–µ—Å? –û–±—Å—É–¥–∏–º –≤–∞—à–∏ –∑–∞–¥–∞—á–∏
            </p>
          </div>
          
          <div className="max-w-2xl mx-auto">
            <Card className="p-8 animate-scale-in border-primary/20 bg-card/50 backdrop-blur-sm">
              <div className="grid md:grid-cols-2 gap-8">
                <div className="space-y-4">
                  <div className="flex items-center space-x-3">
                    <Icon name="Mail" className="text-primary" size={20} />
                    <span>contact@aicorp.ru</span>
                  </div>
                  <div className="flex items-center space-x-3">
                    <Icon name="Phone" className="text-primary" size={20} />
                    <span>+7 (495) 123-45-67</span>
                  </div>
                  <div className="flex items-center space-x-3">
                    <Icon name="MapPin" className="text-primary" size={20} />
                    <span>–ú–æ—Å–∫–≤–∞, –¢–µ—Ö–Ω–æ–ø–∞—Ä–∫</span>
                  </div>
                </div>
                <div>
                  <Button className="w-full mb-4 hover:scale-105 transition-transform animate-pulse-glow">
                    <Icon name="Calendar" className="mr-2" size={16} />
                    –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
                  </Button>
                  <Button variant="outline" className="w-full hover:scale-105 transition-transform">
                    <Icon name="Download" className="mr-2" size={16} />
                    –°–∫–∞—á–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é
                  </Button>
                </div>
              </div>
            </Card>
          </div>
        </div>
      </section>

      {/* –ò–ò-—á–∞—Ç–±–æ—Ç */}
      <div className="fixed bottom-6 right-6 z-50">
        {!chatOpen ? (
          <div className="relative">
            <Button
              size="lg"
              onClick={() => setChatOpen(true)}
              className="rounded-full w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 shadow-2xl transform hover:scale-110 transition-all duration-300"
            >
              <Icon name="MessageCircle" size={28} />
            </Button>
            {!aiWelcome && (
              <div className="absolute -top-2 -right-2 w-6 h-6 bg-red-500 rounded-full flex items-center justify-center animate-bounce">
                <span className="text-xs font-bold">!</span>
              </div>
            )}
            <div className="absolute inset-0 bg-blue-400/30 rounded-full blur-xl animate-pulse"></div>
          </div>
        ) : (
          <Card className="w-80 h-96 flex flex-col bg-slate-900/95 backdrop-blur-xl border-blue-500/30 shadow-2xl animate-slide-up">
            <CardHeader className="flex-row items-center justify-between pb-3 border-b border-slate-700">
              <div className="flex items-center space-x-3">
                <div className="relative">
                  <Icon name="Bot" className="text-blue-400 animate-pulse" size={24} />
                  <div className="absolute inset-0 bg-blue-400/20 rounded-full blur-sm"></div>
                </div>
                <div>
                  <CardTitle className="text-sm text-blue-400">ARIA</CardTitle>
                  <p className="text-xs text-slate-400">–ò–ò –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç</p>
                </div>
              </div>
              <Button 
                size="sm" 
                variant="ghost"
                onClick={() => setChatOpen(false)}
                className="text-slate-400 hover:text-white hover:bg-slate-800"
              >
                <Icon name="X" size={16} />
              </Button>
            </CardHeader>
            
            <CardContent className="flex-1 overflow-y-auto space-y-3 text-sm p-4">
              {messages.map((msg, i) => (
                <div key={i} className={`p-3 rounded-lg max-w-[90%] ${
                  msg.type === 'bot' 
                    ? 'bg-gradient-to-r from-blue-500/20 to-purple-500/20 border-l-4 border-blue-400 text-slate-100 animate-slide-in-left' 
                    : 'bg-slate-800 text-slate-200 ml-auto animate-slide-in-right'
                }`}>
                  {msg.text}
                  <div className="text-xs text-slate-500 mt-1">
                    {new Date(msg.timestamp).toLocaleTimeString()}
                  </div>
                </div>
              ))}
            </CardContent>
            
            <div className="p-4 border-t border-slate-700">
              <div className="flex space-x-2">
                <input
                  type="text"
                  value={userInput}
                  onChange={(e) => setUserInput(e.target.value)}
                  onKeyPress={(e) => e.key === 'Enter' && handleChatSend()}
                  placeholder="–°–ø—Ä–æ—Å–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –æ–± –ò–ò..."
                  className="flex-1 px-3 py-2 bg-slate-800 border border-slate-600 rounded-lg text-sm text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500"
                />
                <Button 
                  size="sm" 
                  onClick={handleChatSend}
                  className="bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 transform hover:scale-105 transition-all duration-200"
                >
                  <Icon name="Send" size={16} />
                </Button>
              </div>
              <div className="flex items-center justify-center mt-2">
                <div className="flex space-x-1">
                  <div className="w-1 h-1 bg-blue-400 rounded-full animate-pulse"></div>
                  <div className="w-1 h-1 bg-purple-400 rounded-full animate-pulse delay-100"></div>
                  <div className="w-1 h-1 bg-cyan-400 rounded-full animate-pulse delay-200"></div>
                </div>
                <span className="text-xs text-slate-500 ml-2">–ò–ò –≥–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é</span>
              </div>
            </div>
          </Card>
        )}
      </div>
    </div>
  )
}